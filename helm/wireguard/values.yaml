# -- Run as a DaemonSet instead of Deployment
daemonSet: false
image:
  repository: ghcr.io/bryopsida/wireguard
  tag: main
  pullPolicy: Always

keygenJob:
  image:
    repository: ghcr.io/curium-rocks/wg-kubectl
    tag: latest
    pullPolicy: Always
  podSecurityContext:
    seccompProfile:
      type: RuntimeDefault
    fsGroup: 1000
    fsGroupChangePolicy: Always
  containerSecurityContext:
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: true
    privileged: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
  # -- Specify the script to run to generate the private key
  command: ["/job/entry-point.sh"]
  # -- Inject additional scripts into the key generation job
  extraScripts: {}
  # -- Add additional environment variables to the key generation job, supports helm templating
  extraEnv: {}
podAnnotations: {}
labels: {}
wireguard:
  # -- Address of the VPN server
  serverAddress: 10.34.0.1/24
  # -- Subnet for your VPN, take care not to clash with cluster POD cidr
  serverCidr: 10.34.0.0/24
  # -- A collection of clients that will be added to wg0.conf, accepts objects with keys PublicKey and AllowedIPs, stored in secret
  clients: []
securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: true
  privileged: false
service:
  # -- Whether the service will be created or not
  enabled: true
  # -- Service type, to keep internal to cluster use ClusterIP or NodePort
  type: LoadBalancer
  # -- Service port, default is 51820 UDP
  port: 51820
  # -- Node port, only valid with service type: NodePort
  nodePort: 31820
# -- Name of a secret with a wireguard private key on key privatekey, if not provided on first install a hook generates one.
secretName: ~
replicaCount: 3
resources:
  requests:
    memory: 256Mi
    cpu: "100m"
  limits:
    memory: 256Mi
    cpu: "100m"
# -- Override the default runtime class of the container, if not provided `runc` will most likely be used
runtimeClassName: ~
deploymentStrategy:
  type: "RollingUpdate"
  rollingUpdate:
    maxUnavailable: 0
    maxSurge: 1
disruptionBudget:
  enabled: true
  minAvailable: 2
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 75
# -- Provide additional environment variables to the wireguard container
extraEnv: {}
#  TEST_ENV_VAR: test-value
# -- If provided, this secret will be used instead of the config created from the helm value scope
configSecretName: ~
# -- The property/key on the secret holding the wireguard configuration file
configSecretProperty: wg0.conf
# -- Disable creation and any mounting of a private key, this assumes another mechanism is provided/used at the container level to fetch the private key
disablePrivateKeyManagement: false
# -- Disable creation and any mount of the wireguard confifugration file, this assumes another mechanism is provided/used to manage a configuration file
disableConfigManagement: false
# -- Passthrough pod volumes
volumes: {}
# -- Passthrough pod volume mounts
volumeMounts: {}
# -- Set pod affinity or antiAffinity
affinity:
  # nodeAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     nodeSelectorTerms:
  #     - matchExpressions:
  #       - key: "example.com/vpn"
  #         operator: Exists
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            app: "{{ .Release.Name }}-wireguard"
            role: vpn
        topologyKey: kubernetes.io/hostname
# -- Set pod nodeSelector, a simplified version of affinity
nodeSelector: {}
  # example.com/vpn: ""
# -- Set pod tolerations
tolerations: []
  # - effect: NoSchedule
  #   operator: Exists
